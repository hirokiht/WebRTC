function pc(e,t,n){this.type=t||"video";var r=this;var i=[{DtlsSrtpKeyAgreement:true}];var s=[createIceServer("stun:stun.l.google.com:19302")];this.peerConnection=new RTCPeerConnection({iceServers:s},{optional:i});this.peer=e;this.dataCh=null;this.signal=n||function(){};this.ice=Array();this.callback=null;this.keepAliveInterval=null;this.deadCounter=0;this.localMediaCb=null;this.remoteMediaCb=null;this.debug=false;this.peerConnection.onicecandidate=function(e){if(e.candidate){o("Sending ice candidate to "+r.peer+":"+JSON.stringify(e.candidate));r.signal(e.candidate)}else o("Finish sending ice candidates!")};this.peerConnection.onaddstream=function(e){if(!e)return;o("Receiving stream: "+JSON.stringify(e.stream));r.remoteMediaCb(e.stream)};this.peerConnection.onnegotiationneeded=function(e){o("Negotiation needed: "+JSON.stringify(e))};this.peerConnection.onremovestream=function(e){o("Stream removed: "+JSON.stringify(e))};this.peerConnection.oniceconnectionstatechange=function(e){if(this.iceConnectionState=="closed"||this.iceConnectionState=="failed")r.end("ice "+this.iceConnectionState+"!");else if(this.iceConnectionState=="disconnected")setTimeout(function(){if(r.peerConnection&&r.peerConnection.iceConnectionState=="disconnected")r.end("Ice Connection State is disconnected for 3 seconds")},3e3);else o("iceConnectionState changed: "+this.iceConnectionState)};this.peerConnection.onsignalingstatechange=function(e){o("signalingState changed: "+r.peerConnection.signalingState);if(r.peerConnection.signalingState=="stable"&&this.iceConnectionState=="connected")console.log("Established "+r.type+" connection to "+r.peer)};this.peerConnection.ondatachannel=function(e){o("On data channel...");r.initDataCh(e.channel)};this.addIceCandidate=function(e){if(this.peerConnection.iceGatheringState=="new"){this.ice.push(e);o("Received ice for "+this.peer+", add to queue")}else try{this.peerConnection.addIceCandidate(new RTCIceCandidate(e),function(){console.log("Adding ICE candidate: "+JSON.stringify(e))},function(e){console.log("Failed to add ICE candidate: "+JSON.stringify(e))})}catch(t){this.peerConnection.addIceCandidate(new RTCIceCandidate(e));console.log("Adding ICE candidate(fallback): "+JSON.stringify(e))}};var o=function(e){if(r.debug)console.log(e)};var u=function(e){r.peerConnection.setLocalDescription(e,function(){o("Sending "+(r.peerConnection.remoteDescription?"answer":"offer")+" to "+r.peer+":\n"+e.sdp);r.signal(e)},function(e){console.log("Error setLocalDescription: "+JSON.stringify(e));this.close()})};var a=function(){if(r.deadCounter>=1)r.deadCounter++;try{r.dataCh.send("hello")}catch(e){console.log("Unable to send hello, reason:"+JSON.stringify(e))}if(r.deadCounter>6)r.end("PC seems to be dead, killing it.")};this.initDataCh=function(e){this.dataCh=e||this.peerConnection.createDataChannel("dataCh");try{this.dataCh.binaryType="blob"}catch(t){this.dataCh.binaryType="arraybuffer"}this.dataCh.onmessage=function(e){o(r.peer+": "+e.data);if(e.data instanceof Blob){alert("blob")}if(r.type=="data"||r.type=="conference")r.remoteMediaCb(e.data);else if(e.data=="hello")this.send("clr");else if(e.data=="clr")r.deadCounter=1};this.dataCh.onopen=function(){o("DataCh onopen event, readyState: "+this.readyState);if(r.type=="data")r.localMediaCb("enable");else if(r.type=="video")r.keepAliveInterval=setInterval(a,2e3);else if(r.type=="conference")r.remoteMediaCb({dataCh:"open"})};this.dataCh.onclose=function(){if(r.type=="data"&&typeof r.localMediaCb=="function")r.localMediaCb("disable");r.end("Data Channel on close event")};if(!e&&this.type=="data")this.peerConnection.createOffer(u,function(e){console.log("Failed to create offer: "+JSON.stringify(e))})};var f=function(){while(r.ice.length){var e=r.ice.pop();try{r.peerConnection.addIceCandidate(new RTCIceCandidate(e),function(){console.log("Adding ICE candidate: "+JSON.stringify(e))},function(e){console.log("Failed to add ICE candidate: "+JSON.stringify(e))})}catch(t){r.peerConnection.addIceCandidate(new RTCIceCandidate(e));console.log("Adding ICE candidate(fallback): "+JSON.stringify(e))}}if(!r.peerConnection.localDescription){r.peerConnection.createAnswer(u,function(e){r.signal(null);r.end("Failed to create answer to "+r.peer+"\nError: "+JSON.stringify(e))})}else o("No need create answer...");o("Successfully set remote description!")};this.setAnswer=function(e){o("Received answer from "+this.peer+": "+e.sdp);this.peerConnection.setRemoteDescription(new RTCSessionDescription(e),f,function(e){r.end("Failed to set remote description, error: "+JSON.stringify(e))})};this.start=function(e,t,n,i){if(!window.MediaStream&&window.webkitMediaStream)MediaStream=webkitMediaStream;if(this.type=="video"||this.type=="conference")if(typeof e=="function")getUserMedia({audio:true,video:true},function(s){e(s);r.start(s,t,n,i)},function(e){console.log("ERROR on getUserMedia(): "+JSON.stringify(e))});else if(e instanceof MediaStream){r.peerConnection.addStream(e);if(i==null){r.initDataCh();r.peerConnection.createOffer(u,function(e){console.log("Failed to create offer: "+JSON.stringify(e))})}else if(n&&n.sdp.indexOf("m=vid")>=0){r.peerConnection.setRemoteDescription(new RTCSessionDescription(n),f,function(e){console.log("Failed to set remote description, error: "+JSON.stringify(e));r.signal(null)});this.callback=i}else console.log("Invalid session description received, no video media for conference peer connection!\n"+JSON.stringify(n));this.remoteMediaCb=t}else console.log("Invalid localMedia type, unable to initialize peer connection");else if(this.type=="data"){if(i==null)this.initDataCh();else if(n){this.peerConnection.setRemoteDescription(new RTCSessionDescription(n),f,function(e){console.log("Failed to set remote description, error: "+JSON.stringify(e));r.signal(null)});this.callback=i}else console.log("Invalid start parameters!");this.localMediaCb=typeof e=="function"?e:function(e){};this.remoteMediaCb=t}else console.log("Unrecognized pc type: "+this.type)};this.restart=function(e,t,n,r){if(this.peerConnection&&this.peerConnection.signalingState!="closed")this.peerConnection.close();this.localMediaCb=null;this.remoteMediaCb=null;this.peerConnection=new RTCPeerConnection({iceServers:s},{optional:i});this.start(e,t,n,r)};this.end=function(e){if(e)console.log("Peer Connection closed, reason:\n"+e);else console.log("Peer connection closed due to unspecified reason.");if(this.peerConnection&&this.peerConnection.signalingState!="closed")this.peerConnection.close();this.peerConnection=null;if(this.signal)this.signal("bye");this.signal=null;if(this.localMediaCb)this.localMediaCb(null);if(this.remoteMediaCb)this.remoteMediaCb(null);this.peer=null;if(this.keepAliveInterval)clearInterval(this.keepAliveInterval);this.keepAliveInterval=null;this.deadCounter=0;this.localMediaCb=null;this.remoteMediaCb=null;delete this}}
